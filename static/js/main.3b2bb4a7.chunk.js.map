{"version":3,"sources":["DragNDrop.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["DragNDrop","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDragEnter","setState","dragging","onDragOver","e","preventDefault","onDragLeave","target","div","onDrop","stopPropagation","state","_this2","react_default","a","createElement","className","classnames","ref","children","React","Component","getResourceContent","_callee","url","response","text","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","stop","getHash","type","content","crypto","createHash","update","digest","_callee2","types","_context2","map","concat","join","readContentFromFile","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","onabort","readAsText","_callee3","_context3","App","onCopy","navigator","clipboard","submitting","writeText","resource","then","alert","dataTransfer","files","getTypes","generate","_x4","_x5","_getBase64HashFromFile","apply","arguments","getBase64HashFromFile","name","onHashTypeChange","id","defineProperty","onUrlChange","value","onSubmit","trim","_x2","_x3","_getBase64HashFromUrl","getBase64HashFromUrl","sha256","sha384","sha512","filename","hash","indexOf","isStylesheet","getResourceHTML","filter","_","_this$state","isValid","length","src_DragNDrop_0","htmlFor","onChange","checked","disabled","aria-label","onClick","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b2bb4a7.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport './DragNDrop.css';\n\nclass DragNDrop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false,\n    };\n  }\n  onDragEnter = () => {\n    this.setState({ dragging: true });\n  }\n  onDragOver = (e) => {\n    e.preventDefault();\n  }\n  onDragLeave = (e) => {\n    if (e.target !== this.div) return;\n    this.setState({ dragging: false });\n  }\n  onDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ dragging: false });\n    if (typeof this.props.onDrop === 'function') {\n      this.props.onDrop(e);\n    }\n  }\n  render() {\n    return (\n      <div\n        onDragEnter={this.onDragEnter}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        className={classnames(this.props.className, this.state.dragging && 'dragging')}\n        ref={(div) => { this.div = div; }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default DragNDrop;\n","import crypto from 'crypto';\n\nasync function getResourceContent(url) {\n  const response = await fetch(url);\n  const text = await response.text();\n  return text;\n}\n\nfunction getHash(type, content) {\n  return crypto.createHash(type).update(content, 'utf8').digest('base64');\n}\n\nexport async function getBase64HashFromUrl(types, url) {\n  const content = await getResourceContent(url);\n  return types.map(type => `${type}-${getHash(type, content)}`).join(' ');\n}\n\nfunction isStylesheet(url) {\n  return url.indexOf('.css') > 0;\n}\n\nexport function getResourceHTML(url, hash) {\n  if (isStylesheet(url)) {\n    return `<link href=\"${url}\" rel=\"stylesheet\" integrity=\"${hash}\" crossorigin=\"anonymous\" />`;\n  } else {\n    return `<script type=\"text/javascript\" src=\"${url}\" integrity=\"${hash}\" crossorigin=\"anonymous\"></script>`;\n  }\n}\n\nfunction readContentFromFile(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      resolve(e.target.result);\n    };\n    reader.onerror = reject;\n    reader.onabort = reject;\n    reader.readAsText(file);\n  });\n}\n\nexport async function getBase64HashFromFile(types, file) {\n  const content = await readContentFromFile(file);\n  return types.map(type => `${type}-${getHash(type, content)}`).join(' ');\n}\n","import React, { Component } from 'react';\nimport DragNDrop from './DragNDrop';\nimport './App.css';\nimport { getBase64HashFromUrl, getResourceHTML, getBase64HashFromFile } from './utils';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      sha256: false,\n      sha384: true,\n      sha512: false,\n      resource: '',\n      submitting: false,\n    };\n  }\n  generate(getHash, filename) {\n    this.setState({\n      submitting: true,\n      resource: '',\n    });\n    getHash()\n      .then(\n        (hash) => {\n          this.setState({\n            resource: getResourceHTML(filename, hash),\n            submitting: false,\n          });\n        },\n        () => {\n          this.setState({\n            submitting: false,\n          });\n        },\n      );\n  }\n  getTypes() {\n    return [\n      this.state.sha256 && 'sha256',\n      this.state.sha384 && 'sha384',\n      this.state.sha512 && 'sha512',\n    ].filter(_ => _);\n  }\n  onCopy = () => {\n    if (navigator.clipboard) {\n      this.setState({ submitting: true });\n      navigator.clipboard\n        .writeText(this.state.resource)\n        .then(\n          () => {\n            alert('copied to clipboard');\n            this.setState({ submitting: false });\n          },\n          () => {\n            this.setState({ submitting: false });\n          },\n        );\n    }\n  }\n  onDrop = (e) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    if (!file) return;\n    const types = this.getTypes();\n    this.generate(() => getBase64HashFromFile(types, file), `./${file.name}`);\n  }\n  onHashTypeChange = (e) => {\n    const type = e.target.id;\n    this.setState({ [type]: !this.state[type] });\n  }\n  onUrlChange = (e) => {\n    this.setState({\n      url: e.target.value,\n    });\n  }\n  onSubmit = () => {\n    if (this.state.submitting) return;\n    const url = this.state.url.trim();\n    if (!url) return;\n    const types = this.getTypes();\n    this.generate(() => getBase64HashFromUrl(types, url), url);\n  }\n  render() {\n    const { url, sha256, sha384, sha512, submitting, resource } = this.state;\n    const isValid = url.trim().length > 0 && (sha256 || sha384 || sha512);\n    return (\n      <DragNDrop onDrop={this.onDrop} className=\"container\">\n        <main>\n          <h1>Subresource Integrity (SRI) Generator</h1>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"field-group\">\n              <p><label htmlFor=\"input\">Enter url or drop file below</label></p>\n              <input id=\"input\" type=\"text\" value={url} onChange={this.onUrlChange} />\n            </div>\n            <div className=\"field-group\">\n              <input id=\"sha256\" type=\"checkbox\" checked={sha256} onChange={this.onHashTypeChange} />\n              <label htmlFor=\"sha256\">sha256</label>\n              <input id=\"sha384\" type=\"checkbox\" checked={sha384} onChange={this.onHashTypeChange} />\n              <label htmlFor=\"sha384\">sha384</label>\n              <input id=\"sha512\" type=\"checkbox\" checked={sha512} onChange={this.onHashTypeChange} />\n              <label htmlFor=\"sha512\">sha512</label>\n            </div>\n            <button type=\"submit\" disabled={!isValid || submitting}>Generate</button>\n          </form>\n          <section>\n            <button aria-label=\"generated integrity hash\" onClick={this.onCopy}>{resource}</button>\n          </section>\n        </main>\n        <footer>\n          <span>© 2018 LaySent.</span>\n          <a href=\"https://github.com/laysent/sri-hash-generator\">Github</a>\n        </footer>\n      </DragNDrop>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}